@inject ProtectedSessionStorage ProtectedSessionStore
@inject StateContainer StateContainer
<h3>ItemListComponent</h3>
<div class="container-fluid">

    <div class="row">
        <div class="col-8">Item</div>
        <div class="col-2">Price</div>
        <div class="col-2">Subtotal</div>
    </div>
    @foreach (var item in @StateContainer.Items)
    {
        <div class="row">
            <div class="col-8" style="background-color:forestgreen">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-12 col-md-4" style="background-color:palevioletred">
                            <a href="/menu/@StateContainer.PizzaInfo.Type.Where(t => t.TypeId == @item.TypeId).FirstOrDefault().TypeName ">
                                <img src="@StateContainer.PizzaInfo.Type.Where(t=>t.TypeId== @item.TypeId).FirstOrDefault().Image" width="100" height="100" />
                            </a>
                        </div>
                        <div class="col-sm-12 col-md-4" style="background-color:cornflowerblue">
                            <div>
                                @StateContainer.PizzaInfo.Type.Where(t => t.TypeId == @item.TypeId).FirstOrDefault().TypeName pizza

                            </div>
                            <div>
                                @StateContainer.PizzaInfo.Size.Where(t => t.SizeId == item.SizeId).FirstOrDefault().SizeName
                                ($@StateContainer.PizzaInfo.Size.Where(t => t.SizeId == item.SizeId).FirstOrDefault().SizePrice)

                            </div>
                        </div>
                        <div class="col-sm-12 col-md-4" style="background-color:yellowgreen">
                            <div>Topping</div>
                            @foreach (var topping in @StateContainer.PizzaInfo.Topping.Where(i => item.ToppingId.Contains(i.ToppingId)))
                            {
                                <div>
                                    @topping.ToppingName : +$@topping.ToppingPrice
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-2">
                $@StateContainer.PizzaInfo.Size.Where(t => t.SizeId == @item.SizeId).FirstOrDefault().SizePrice
            </div>
            <div class="col-2">
                $@item.Subtotal
            </div>
        </div>
        <hr />
    }
</div>
@code {

    List<Item> Items { get; set; }
    protected override async Task OnInitializedAsync()
    {

        StateContainer.OnChange += StateHasChanged;
    }

    private async Task RemoveItem(Guid itemid)
    {
        var items = StateContainer.Items;
        var item = items.Find(id => id.ItemId == itemid);
        items.Remove(item);
        StateContainer.SetItems(items);
    }

    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }
}
