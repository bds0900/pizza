@inject StateContainer StateContainer
<h3>Summary</h3>
<div class="container-fluid">
    <div>
        Subtotal:@(
            Math.Round(
            StateContainer.Items.Select(i=>i.Subtotal).Sum()+
            StateContainer.SideItems.Select(i=>i.Subtotal).Sum()
            ,2)
        )
    </div>
    <div>
        Tax:@(
            Math.Round(
            (StateContainer.Items.Select(i => i.Subtotal).Sum() +
            StateContainer.SideItems.Select(i => i.Subtotal).Sum())
            *0.13
            ,2)
        )
    </div>
    <div>
        Total:@(
            Math.Round(
            (StateContainer.Items.Select(i => i.Subtotal).Sum() +
            StateContainer.SideItems.Select(i => i.Subtotal).Sum())
            *1.13
            ,2)
        )
    </div>
    
</div>
@code {
    protected async override Task OnInitializedAsync()
    {
        StateContainer.OnChange += StateHasChanged;
    }
    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }
}
